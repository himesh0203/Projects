pip install streamlit pandas

streamlit run job_portal_dashboard.py

import streamlit as st
import pandas as pd
from datetime import datetime

# -------------------- SETUP --------------------
st.set_page_config(page_title="üíº Job Portal Dashboard", layout="wide")
st.title("üíº Job Portal Dashboard")
st.markdown("Post jobs, search jobs, and apply as a candidate or recruiter.")

# Initialize session state for jobs and applications
if "jobs" not in st.session_state:
    st.session_state.jobs = pd.DataFrame(columns=["Job ID", "Company", "Title", "Location", "Salary", "Posted At"])
if "applications" not in st.session_state:
    st.session_state.applications = pd.DataFrame(columns=["Candidate", "Job ID", "Job Title", "Company", "Applied At"])

# -------------------- POST JOB --------------------
st.sidebar.subheader("üè¢ Company / Director Portal")
with st.sidebar.form("post_job_form"):
    st.write("Post a New Job")
    company_name = st.text_input("Company Name")
    job_title = st.text_input("Job Title")
    location = st.text_input("Location")
    salary = st.number_input("Salary ($)", min_value=0.0, step=1000.0)
    submit_job = st.form_submit_button("Post Job")
    if submit_job:
        job_id = len(st.session_state.jobs) + 1
        new_job = pd.DataFrame([{
            "Job ID": job_id,
            "Company": company_name,
            "Title": job_title,
            "Location": location,
            "Salary": salary,
            "Posted At": datetime.now()
        }])
        st.session_state.jobs = pd.concat([st.session_state.jobs, new_job], ignore_index=True)
        st.success(f"Job '{job_title}' posted successfully!")

# -------------------- VIEW & APPLY JOBS --------------------
st.subheader("üîé Available Jobs for Recruiters / Candidates")
if st.session_state.jobs.empty:
    st.info("No jobs posted yet.")
else:
    st.dataframe(st.session_state.jobs.sort_values(by="Posted At", ascending=False))

    st.markdown("### Apply for a Job")
    job_id_to_apply = st.number_input("Enter Job ID to apply", min_value=1, max_value=len(st.session_state.jobs), step=1)
    candidate_name = st.text_input("Your Name")
    if st.button("Apply"):
        if candidate_name:
            job_row = st.session_state.jobs[st.session_state.jobs["Job ID"] == job_id_to_apply].iloc[0]
            new_application = pd.DataFrame([{
                "Candidate": candidate_name,
                "Job ID": job_row["Job ID"],
                "Job Title": job_row["Title"],
                "Company": job_row["Company"],
                "Applied At": datetime.now()
            }])
            st.session_state.applications = pd.concat([st.session_state.applications, new_application], ignore_index=True)
            st.success(f"{candidate_name} applied for '{job_row['Title']}' at {job_row['Company']}!")

# -------------------- VIEW APPLICATIONS --------------------
st.subheader("üìù Applications Received")
if st.session_state.applications.empty:
    st.info("No applications yet.")
else:
    st.dataframe(st.session_state.applications.sort_values(by="Applied At", ascending=False))
