import pygame
import random

# Initialize Pygame
pygame.init()

# Screen dimensions
SCREEN_WIDTH = 800
SCREEN_HEIGHT = 600
screen = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))
pygame.display.set_caption("Space Shooter")

# Colors
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
RED = (255, 0, 0)
GREEN = (0, 255, 0)
BLUE = (0, 0, 255)

# Player properties
player_width = 50
player_height = 50
player_x = (SCREEN_WIDTH - player_width) // 2
player_y = SCREEN_HEIGHT - player_height - 10
player_speed = 5

# Bullet properties
bullet_width = 5
bullet_height = 15
bullet_speed = 10
bullets = []

# Enemy properties
enemy_width = 40
enemy_height = 40
enemy_speed = 3
enemies = []

# Game loop
running = True
clock = pygame.time.Clock()

def draw_player(x, y):
    pygame.draw.rect(screen, BLUE, (x, y, player_width, player_height))

def draw_bullet(x, y):
    pygame.draw.rect(screen, RED, (x, y, bullet_width, bullet_height))

def draw_enemy(x, y):
    pygame.draw.rect(screen, GREEN, (x, y, enemy_width, enemy_height))

while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_SPACE:
                bullets.append([player_x + player_width // 2 - bullet_width // 2, player_y])

    keys = pygame.key.get_pressed()
    if keys[pygame.K_LEFT] and player_x > 0:
        player_x -= player_speed
    if keys[pygame.K_RIGHT] and player_x < SCREEN_WIDTH - player_width:
        player_x += player_speed

    # Move bullets
    for bullet in bullets:
        bullet[1] -= bullet_speed
        if bullet[1] < 0:
            bullets.remove(bullet)

    # Spawn enemies
    if random.randint(1, 100) == 1: # Adjust frequency of enemy spawning
        enemies.append([random.randint(0, SCREEN_WIDTH - enemy_width), 0])

    # Move enemies
    for enemy in enemies:
        enemy[1] += enemy_speed
        if enemy[1] > SCREEN_HEIGHT:
            enemies.remove(enemy)

    # Collision detection (bullet-enemy)
    for bullet in bullets:
        for enemy in enemies:
            if (bullet[0] < enemy[0] + enemy_width and
                bullet[0] + bullet_width > enemy[0] and
                bullet[1] < enemy[1] + enemy_height and
                bullet[1] + bullet_height > enemy[1]):
                bullets.remove(bullet)
                enemies.remove(enemy)
                break # Exit inner loop after collision

    # Drawing
    screen.fill(BLACK)
    draw_player(player_x, player_y)
    for bullet in bullets:
        draw_bullet(bullet[0], bullet[1])
    for enemy in enemies:
        draw_enemy(enemy[0], enemy[1])

    pygame.display.flip()
    clock.tick(60)

pygame.quit()
